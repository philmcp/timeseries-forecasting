data$platform <- as.factor(data$platform)
require("sqldf")
require("RPostgreSQL")
options(sqldf.RPostgreSQL.user ="phil",
sqldf.RPostgreSQL.password ="adjust",
sqldf.RPostgreSQL.dbname ="adjust",
sqldf.RPostgreSQL.host ="localhost",
sqldf.RPostgreSQL.port =5432)
data <- sqldf("select platform, app_token, timestamp, installs from install WHERE app_token = '62c0904d3c2c' ORDER BY timestamp ASC LIMIT 1000")
data$platform <- as.factor(data$platform)
str(data)
summary(data)
str(data)
require(ggplot2)
require(GGally)
ggpairs(data[,c(4,7:13),with=F],
lower = list(
continuous = "smooth"
))
install.package('ggplot2')
install.packages('ggplot2')
install.packages('GGally')
require(ggplot2)
require(GGally)
ggpairs(data[,c(4,7:13),with=F],
lower = list(
continuous = "smooth"
))
install.packages('ggally')
install.packages('GGally')
require(ggplot2)
require(GGally)
ggpairs(data[,c(4,7:13),with=F],
lower = list(
continuous = "smooth"
))
install.packages("GGally")
install.packages("ggplot2")
require("sqldf")
require("RPostgreSQL")
options(sqldf.RPostgreSQL.user ="phil",
sqldf.RPostgreSQL.password ="adjust",
sqldf.RPostgreSQL.dbname ="adjust",
sqldf.RPostgreSQL.host ="localhost",
sqldf.RPostgreSQL.port =5432)
data <- sqldf("SELECT days, max(dow), max(week), max(month), sum(installs)
FROM (
select timestamp::date - to_timestamp(1483228800)::date as days, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month,installs  from install
WHERE app_token = '82cbea0b9b94'
ORDER BY timestamp ASC
) as t1
GROUP BY days
ORDER BY days aSC
")
data <- sqldf("SELECT days, max(dow) as dow, max(week) as week, max(month) as month, sum(installs) as installs
FROM (
select timestamp::date - to_timestamp(1483228800)::date as days, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month,installs  from install
WHERE app_token = '82cbea0b9b94'
ORDER BY timestamp ASC
) as t1
GROUP BY days
ORDER BY days aSC
")
newModel <- lm(days ~ installs, data=data, na.action=na.exclude)
View(newModel)
summary(newModel)
newModel <- lm(installs ~ days, data=data, na.action=na.exclude)
summary(newModel)
newModel <- lm(installs ~ days + dow + week + month, data=data, na.action=na.exclude)
summary(newModel)
newModel <- lm(installs ~ days + dow + week + month, data=data, na.action=na.exclude)
adwwad
summary(newModel)
newModel <- lm(installs ~ days + dow + week + month, data=data, na.action=na.exclude)
print 'adwwad'
summary(newModel)
print "adwwad"
data <- sqldf("select platform, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month, installs  from (SELECT * FROM install LIMIT 10000) as install
ORDER BY timestamp ASC")
mean(data$dow)
summary(data)
data <- sqldf("   select platform, app_token, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month, installs  from (SELECT * FROM install LIMIT 100000) as install
ORDER BY timestamp ASC")
summary(data)
hist(data$dow)
hist(data$month)
hist(data$install)
hist(log(data$install))
data <- sqldf("   select platform, app_token, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month, installs  from (SELECT * FROM install LIMIT 100000) as install
ORDER BY timestamp ASC") %>%
filter(app_token == "3297ea85b27e")
data <- sqldf("   select platform, app_token, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month, installs  from (SELECT * FROM install LIMIT 100000) as install
ORDER BY timestamp ASC")
data %>%
filter(app_token == "3297ea85b27e")
install.packages("magrittr")
library(magrittr)
data <- sqldf("   select platform, app_token, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month, installs  from (SELECT * FROM install LIMIT 100000) as install
ORDER BY timestamp ASC")
data %>%
filter(app_token == "3297ea85b27e")
data %>%
filter(app_token == "3297ea85b27e")
data %>%
filter(platform == "ios")
View(data)
as.factor(data$platform)
data %>%
filter(platform == "ios")
data %>%
filter(platform == "ios") %>%
print
install.packages("babynames")
install.packages("dplyr")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("ggplot2")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("qplot")
library(ggplot2)   # for graphics
install.packages("ggplot2")
install.packages("ggplot2", dependencies=TRUE)
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("Hmisc", dependencies=TRUE)
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
library(ggplot2)   # for graphics
install.packages("ggplot2")
install.packages("reshape2")
install.packages("stringr")
sudo -i R
sudo R
sudo r
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
install.packages("babynames")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
babynames
install.packages("dplyr")
library(babynames) # data package
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
library(ggplot2)   # for graphics
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
data %>%
filter(platform == "ios") %>%
print
data %>%
filter(platform == "ios") %>%
group_by(app_token) %>%
print
data %>%
filter(platform == "ios") %>%
group_by(app_token) %>%
summarise(max(installs))
data <- sqldf("SELECT app_token, days, max(dow) as dow, max(week) as week, max(month) as month, sum(installs) as installs
FROM (
select app_start.app_token, timestamp::date - (min_time)::date as days, extract(dow from timestamp) as dow, extract(week from timestamp) as week,
extract(month from timestamp) as month,installs
from  (SELECT * FROM install LIMIT 100) as install
JOIN app_start ON app_start.app_token = install.app_token
ORDER BY timestamp ASC
) as t1
GROUP BY app_token, days
ORDER BY app_token, days aSC
")
require("sqldf")
install.packages("sqldf")
install.packages("RPostgreSQL")
install.packages(c("MASS", "survival"))
data <- sqldf("SELECT * FROM features WHERE app_token = '000b114bf103'")
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data <- sqldf("SELECT * FROM features WHERE app_token = '000b114bf103'")
require("sqldf")
require("RPostgreSQL")
library(magrittr)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "adjust",
host = "localhost", port = 5432,
user = "phil", password = "adjust")
options(sqldf.RPostgreSQL.user ="phil",
sqldf.RPostgreSQL.password ="adjust",
sqldf.RPostgreSQL.dbname ="adjust",
sqldf.RPostgreSQL.host ="localhost",
sqldf.RPostgreSQL.port =5432)
data <- sqldf("SELECT * FROM features WHERE app_token = '000b114bf103'")
View(data)
data %>%
group_by(app_token) %>%
summarise(max(installs))
hist(data)
hist(data, x=days, y=installs)
hist(data, x=data$days, y=data$installs)
?hist
hist(data$installs)
hist(log(data$installs))
plot(data)
summary(data)
plot(data$installs)
plot(y=data$installs,x=days)
plot(y=data$installs,x=data$days)
data <- sqldf("SELECT * FROM features")
data <- sqldf("SELECT * FROM features LIMIT 100000")
plot(y=data$installs,x=data$days)
hist(log(data$installs))
View(data)
plot(y=avg(data$installs),x=data$days)
plot(y=average(data$installs),x=data$days)
grouped <- data %>%
group_by(data$days) %>%
summarise(mean($installs))
grouped <- data %>%
group_by(data$days) %>%
summarise(mean(data$installs))
View(grouped)
grouped <- data %>%
group_by(data$days) %>%
summarise_at(mean(data$installs))
aggregate(data$installs, by=list(data$days), FUN=mean)[2]
?aggregate
grouped <- data %>%
group_by(data$days) %>%
summarise(mean=mean(data$installs), sd=sd(data$installs))
grouped <- data %>%
group_by(data$days) %>%
summarise(mean(data$installs))
grouped <- data %>%
group_by(data$days) %>%
summarise(m = mean(data$installs))
View(grouped)
group_by(data, days) %>% summarize(m = mean(installs))
grouped <- group_by(data, days) %>% summarize(m = mean(installs))
plot(y=average(data$installs),x=data$days)
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=data$installs,x=data$days)
plot(y=grouped$installs,x=grouped$days)
plot(y=grouped$installs,x=log(grouped$days))
plot(y=log(grouped$installs),x=grouped$days)
plot(y=grouped$installs,x=grouped$days)
data <- sqldf("SELECT * FROM features LIMIT 1000000")
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=grouped$installs,x=grouped$days)
data <- sqldf("SELECT * FROM features LIMIT 10000000")
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=grouped$installs,x=grouped$days)
lr(grouped)
lm(grouped)
data <- sqldf("SELECT * FROM features LIMIT 100000000")
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=grouped$installs,x=grouped$days)
plot(y=log(grouped$installs),x=grouped$days)
hist(log(data$installs))
hist(data$installs)
hist(grouped$installs)
reg <- lm(installs ~ days + dow + week + month, data=grouped, na.action=na.exclude)
reg <- lm(installs ~ days, data=grouped, na.action=na.exclude)
summarise(reg)
summary(reg)
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=grouped$installs,x=grouped$days)
install.packages("DAAG")
library(DAAG)
cv.lm(grouped)
cv.lm(df = grouped, form.lm = formula(installs ~ days))
cv.lm(df = grouped, form.lm = formula(installs ~ days))
cv.lm(df = grouped, form.lm = formula(installs ~ .))
cv.lm(df=grouped, form.lm = formula(installs ~ .))
cv.lm(data=grouped, form.lm = formula(installs ~ .))
cv.lm(data=grouped, form.lm = formula(installs ~ days))
summarise(grouped)
grouped
as.double(data$days)
cv.lm(data=grouped, form.lm = formula(installs ~ days))
as.double(grouped$days)
cv.lm(data=grouped, form.lm = formula(installs ~ days))
model <- cv.lm(data=grouped, form.lm = formula(installs ~ days))
as.double(grouped$days)
as.double(grouped$days)
View(grouped)
hist(grouped$installs)
grouped
model <- cv.lm(data=grouped, form.lm = formula(installs ~ days))
as.double(data$days)
model <- cv.lm(data=grouped, form.lm = formula(installs ~ days))
as.numeric(grouped$days)
as.numeric(data$days)
View(data)
reg <- lm(installs ~ days, data=grouped, na.action=na.exclude)
reg
summary(reg)
reg <- lm(installs ~ days + dow, data=grouped, na.action=na.exclude)
grouped <- group_by(data, days, dow) %>% summarize(installs = mean(installs))
View(grouped)
plot(y=grouped$installs,x=grouped$days)
grouped <- group_by(data, days) %>% summarize(installs = mean(installs))
plot(y=grouped$installs,x=grouped$days)
plot(y=grouped$installs,x=grouped$days)
abline(lm(installs ~ days))
abline(lm(installs ~ days, data=grouped))
abline(lm(installs ~ days, data=grouped))
as.numeric(grouped$days)
abline(lm(installs ~ days, data=grouped, xaxis='test'))
?abline
overall <- lm(installs ~ days, data=grouped)
plot(overall)
summary(overall)
grouped = within(grouped, {
dow = days % 7
})
grouped$dow <- grouped$days % 7
grouped.dow <- grouped$days % 7
grouped = within(grouped, {
dow = days %% 7
})
View(grouped)
plot(y=grouped$installs,x=grouped$days)
overall <- lm(installs ~ days + dow, data=grouped)
summary(overall)
overall <- lm(installs ~ days, data=grouped)
summary(overall)
grouped = within(grouped, {
dow = days %% 7
month = as.Date(days, origin = "2014-01-01")
})
grouped = within(grouped, {
dow = days %% 7
month = month*as.Date(days, origin = "2014-01-01"))
})
grouped = within(grouped, {
dow = days %% 7
month = month(as.Date(days, origin = "2014-01-01"))
})
install.packages("lubridate")
grouped = within(grouped, {
dow = days %% 7
month = month(as.Date(days, origin = "2014-01-01"))
})
grouped = within(grouped, {
dow = days %% 7
month = month(as.Date(days, origin = "2014-01-01", format="mm"))
})
grouped = within(grouped, {
dow = days %% 7
month = as.Date(days, origin = "2014-01-01", format="mm")
})
grouped = within(grouped, {
dow = days %% 7
month = as.Date(days, origin = "2014-01-01", format="m")
})
grouped = within(grouped, {
dow = days %% 7
month = as.Date(days, origin = "2014-01-01", format="MM")
})
?as.Date
grouped = within(grouped, {
dow = days %% 7
month = as.Date(days, origin = "2014-01-01", format="%m")
})
grouped = within(grouped, {
dow = days %% 7
month = format(as.Date(days, origin = "2014-01-01"), "%m")
})
grouped = within(grouped, {
dow = days %% 7
month = as.Numeric(format(as.Date(days, origin = "2014-01-01"), "%m"))
})
grouped = within(grouped, {
dow = days %% 7
month =  as.numeric(format(as.Date(days, origin = "2014-01-01"), "%m"))
})
overall <- lm(installs ~ days + dow + month, data=grouped)
summary(overall)
overall <- lm(installs ~ days + dow, data=grouped)
summary(overall)
plot(overall)
abline(overall)
abline(lm(installs ~ days + dow, data=grouped))
overall <- lm(installs ~ days + dow, data=grouped)
summary(overall)
overall <- lm(installs ~ dow, data=grouped)
summary(overall)
overall <- lm(installs ~ days, data=grouped)
summary(overall)
overall <- lm(installs ~ dow, data=grouped)
summary(overall)
overall <- lm(installs ~ dow + days, data=grouped)
summary(overall)
overall <- lm(installs ~ dow + days + week, data=grouped)
overall <- lm(installs ~ dow + days + month, data=grouped)
summary(overall)
grouped = within(grouped, {
dow = days %% 7
week =  days %% 52
month =  as.numeric(format(as.Date(days, origin = "2014-01-01"), "%m"))
})
hist(grouped$installs)
plot(y=grouped$installs,x=grouped$days)
plot(y=grouped$installs,x=grouped$week)
plot(y=grouped$installs,x=grouped$month)
groupedMonth <- group_by(data, month) %>% summarize(installs = mean(installs))
View(groupedMonth)
plot(y=groupedMonth$installs,x=groupedMonth$month)
barplot(y=groupedMonth$installs,x=groupedMonth$month)
barplot(groupedMonth$installs)
barplot(groupedMonth$installs)
hist(grouped$installs)
hist(grouped$installs, main="test")
hist(grouped$installs, main="Distribution of installs per day")
barplot(groupedMonth$installs)
barplot(groupedMonth$installs, main="Average installs per month")
plot(y=grouped$installs,x=grouped$days)
groupedWeek <- group_by(data, week) %>% summarize(installs = mean(installs))
barplot(groupedWeek$installs, main="Average installs per week")
barplot(groupedDow$installs, main="Average installs per day of week")
groupedDow <- group_by(data, dow) %>% summarize(installs = mean(installs))
barplot(groupedDow$installs, main="Average installs per day of week")
hist(groupedDow$installs, main="Average installs per day of week")
barplot(groupedDow$installs, main="Average installs per day of week")
